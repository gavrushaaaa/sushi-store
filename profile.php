<?php
session_start();

if (!isset($_SESSION['username'])) {
    header("Location: login.php");
    exit();
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
try {
    $pdo = new PDO("sqlite:database.db");
    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: " . $e->getMessage();
    exit();
}

$message = '';

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_SESSION['username'];
    $newUsername = trim($_POST['username']);
    $newPassword = $_POST['password'];

    if (empty($newUsername) || empty($newPassword)) {
        $message = "–û—à–∏–±–∫–∞: –≤—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!";
    } else {
        $result = updateUser($username, $newUsername, $newPassword);
        $message = $result;

        if ($result == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!") {
            $_SESSION['username'] = $newUsername; // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏
            header("Location: profile.php?success=1"); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
            exit();
        }
    }
}

function updateUser($username, $newUsername, $newPassword) {
    try {
        global $pdo;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $stmt = $pdo->prepare("SELECT id FROM users WHERE username = :newUsername");
        $stmt->execute(['newUsername' => $newUsername]);

        if ($stmt->fetch() && $newUsername !== $username) {
            return "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!";
        }

        // –•–µ—à–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
        $hashedPassword = password_hash($newPassword, PASSWORD_DEFAULT);

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        $stmt = $pdo->prepare("UPDATE users SET username = :newUsername, password = :newPassword WHERE username = :username");
        $stmt->execute(['newUsername' => $newUsername, 'newPassword' => $hashedPassword, 'username' => $username]);

        return "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!";
    } catch (PDOException $e) {
        return "–û—à–∏–±–∫–∞: " . $e->getMessage();
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$username = $_SESSION['username'];
$stmt = $pdo->prepare("SELECT * FROM orders WHERE username = :username ORDER BY order_date DESC");
$stmt->execute(['username' => $username]);
$orders = $stmt->fetchAll(PDO::FETCH_ASSOC);

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
$stmt = $pdo->query("SELECT * FROM products");
$productsInfo = [];
while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
    $productsInfo[$row['id']] = $row;
}
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ü—Ä–æ—Ñ–∏–ª—å</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head> 
<body>
    <div class="navbar">
        <a href="main.html">–ì–ª–∞–≤–Ω–∞—è</a>
        <a href="about.html">–û –Ω–∞—Å</a>
        <a href="sale.html">–ê–∫—Ü–∏–∏ </a>
        <a href="reviews.php">–û—Ç–∑—ã–≤—ã</a>
        <a href="cart.php">–ö–æ—Ä–∑–∏–Ω–∞üõí</a>
        <a href="logout.php" class="transparent-button">–í—ã–π—Ç–∏</a>
    </div>
    <div class="header">
        <div class="logo-text">
            <img src="images/logo.png" alt="sushi" class="logo">
            <div class="text-container">
                <h1>–ö–∞–π–¥–∑–µ–Ω</h1>
                <h1 class="phone-number">+7 996 437 2020</h1>
            </div>
        </div>
    </div>

    <div class="content">
        <h2>–ü—Ä–æ—Ñ–∏–ª—å</h2>
        <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <?php echo htmlspecialchars($_SESSION['username']); ?>!</p>
        
        <form action="profile.php" method="post">
            <p id="heading">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</p>
            <div class="field">
                <input name="username" autocomplete="off" placeholder="–ù–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" class="input-field" type="text" required value="<?php echo htmlspecialchars($_SESSION['username']); ?>">
            </div>
            <div class="field">
                <input name="password" placeholder="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å" class="input-field" type="password" required>
            </div>
            <div class="btn">
                <button type="submit" class="button1">–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</button>
            </div>
            <?php if (!empty($message)) { echo '<p>' . $message . '</p>'; } ?>
        </form>

        <h2>–í–∞—à–∏ –∑–∞–∫–∞–∑—ã</h2>
        <?php if (empty($orders)): ?>
            <p>–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.</p>
        <?php else: ?>
            <ul class="orders">
                <?php foreach ($orders as $order): ?>
                    <li class="order">
                        <p><strong>–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞:</strong> <?php echo $order['order_date']; ?></p>
                        <p><strong>–ò–º—è:</strong> <?php echo htmlspecialchars($order['name']); ?></p>
                        <p><strong>–ê–¥—Ä–µ—Å:</strong> <?php echo htmlspecialchars($order['address']); ?></p>
                        <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> <?php echo htmlspecialchars($order['phone']); ?></p>
                        <p><strong>–¢–æ–≤–∞—Ä—ã:</strong>
                            <ul>
                                <?php
                                $products = json_decode($order['products'], true);
                                foreach ($products as $productId => $quantity) {
                                    if (isset($productsInfo[$productId])) {
                                        $product = $productsInfo[$productId];
                                        echo "<li>{$product['name']} x {$quantity} —à—Ç. ({$product['price']} ‚ÇΩ)</li>";
                                    } else {
                                        echo "<li>–¢–æ–≤–∞—Ä —Å ID {$productId} –±–æ–ª—å—à–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω</li>";
                                    }
                                }
                                ?>
                            </ul>
                        </p>
                        <p><strong>–ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞:</strong> <?php echo $order['total_price']; ?> ‚ÇΩ</p>
                    </li>
                <?php endforeach; ?>
            </ul>
        <?php endif; ?>
    </div>
</body>
</html>